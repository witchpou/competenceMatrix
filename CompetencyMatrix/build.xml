<project name="competencymatrix" default="copy_frontend_local" basedir=".">
	<description>
    	ant script that can setup and run this project including maven calls
  	</description>

	<property name="runtime_path" value="../tomee" /> <!-- TODO what about websphere liberty --> 

	<property name="ui_src" location="webclient/src/main/webapp/" />
	<property name="warfile" value="target/competencymatrix.war" />
	<property name="ui_dest" value="${basedir}/target/competencymatrix" />
	
	<property name="sql_create" value="
			DROP DATABASE IF EXISTS competencymatrix;
			CREATE DATABASE competencymatrix;" />
	<property name="sql_user_create" value="
			CREATE USER 'competencymatrix'@'localhost' IDENTIFIED BY 'competencymatrix';
			GRANT ALL PRIVILEGES ON competencymatrix.* TO 'competencymatrix'@'localhost';" />
	
	<target name="setup_project" depends="stop_tomee,build_tomee,build_application,run_tomee"></target>
	<target name="rebuild_application" depends="stop_tomee,build_application,run_tomee"></target>
	<target name="clean_all" depends="stop_tomee,clean_tomee,clean_application"></target>
	<target name="create_mysql_database" depends="db_args, setup_database"></target>
	
	<target name="init">
		<condition property="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect">
			<equals arg1="${db}" arg2="mysql" />
		</condition>
		<condition property="profile.db" value="mysql">
			<equals arg1="${db}" arg2="mysql" />
		</condition>
		
		<condition property="hibernate.dialect" value="org.hibernate.dialect.H2Dialect">
			<not>
				<isset property="${db}"/>
			</not>
		</condition>
		<condition property="profile.db" value="h2">
			<not>
				<isset property="${db}"/>
			</not>
		</condition>
	</target>
	
	<target name="copy_frontend_local">
		<echo>copy web frontend from ${ui_src}</echo>
		<echo>to ${ui_dest}</echo>
		<copy todir="${ui_dest}">
			<fileset dir="${ui_src}" />
		</copy>
	</target>

	<target name="build_copy" >
		<echo>copy ${warfile} to local AS installation to ${local_as}</echo>
		<copy todir="${local_as}" file="${basedir}/${warfile}"></copy>
	</target>
	
	<target name="build_application" depends="init">
		<echo>build war</echo>
		<echo>${hibernate.dialect}</echo>
		<antcall target="call_maven">
			<param name="exec_dir" value="."/>
			<param name="mvn_command" value="clean package -Dmaven.test.skip=true -Dhibernate.dialect=${hibernate.dialect}"/>
		</antcall>	
	</target>
	
	<target name="build_application_with_tests" depends="init">
		<echo>build war</echo>
		<antcall target="call_maven">
			<param name="exec_dir" value="."/>
			<param name="mvn_command" value="clean package -Dhibernate.dialect=${hibernate.dialect}"/>
		</antcall>	
	</target>

	<target name="clean_application">
		<antcall target="call_maven">
			<param name="exec_dir" value="."/>
			<param name="mvn_command" value="clean"/>
		</antcall>		
	</target>

	<target name="build_tomee" description="build tomee" depends="init">
		<antcall target="call_maven">
			<param name="exec_dir" value="${basedir}/${runtime_path}"/>
			<param name="mvn_command" value="tomee:build -P${profile.db}"/>
		</antcall>
	</target>
	
	<target name="clean_tomee" description="build tomee">
		<antcall target="call_maven">
			<param name="exec_dir" value="${basedir}/${runtime_path}"/>
			<param name="mvn_command" value="clean"/>
		</antcall>
	</target>

	<target name="run_tomee">
		<exec dir="${runtime_path}/target/apache-tomee/bin/" executable="bash" os="Linux">
			<arg value="startup.sh" />
		</exec>
		<exec dir="${runtime_path}/target/apache-tomee/bin/" executable="cmd" os="Windows">
			<arg value="startup.bat" />
		</exec>
	</target>

	<target name="stop_tomee" depends="check_tomee_exist" if="${tomee.path.exist}">
		<echo>Try to stop a running TomEE instance...</echo>
		<exec dir="${runtime_path}/target/apache-tomee/bin/" executable="bash" os="Linux" >
			<arg value="shutdown.sh" />
		</exec>
		<exec dir="${runtime_path}/target/apache-tomee/bin/" executable="cmd" os="Windows" >
			<arg value="shutdown.bat" />
		</exec>
	</target>

	<!-- call maven on various operating systems -->
	<target name="call_maven">
		<echo>Running Maven in ${exec_dir} with ${mvn_command}</echo>
		<exec dir="${exec_dir}" executable="bash" os="Linux">
			<arg value="-c" />
			<arg value="mvn ${mvn_command}" />
		</exec>
		<exec dir="${exec_dir}" executable="cmd" os="Windows">
			<arg value="/C" />
			<arg value="mvn ${mvn_command}" />
		</exec>
	</target>

	<target name="check_tomee_exist">
		<available property="tomee.path.exist" file="${runtime_path}/target/apache-tomee/bin/" type="dir" />
	</target>

	<!-- mysql stuff -->
	<target name="setup_database">
		<echo>Create database</echo>
		<exec executable="mysql" os="Linux">
			<arg value="--user=${sql.user}" />
			<arg value="--password=${sql.password}" />
			<arg value="-e ${sql_create}" />
		</exec>		
		<echo>Try to drop user</echo>
		<exec executable="mysql" os="Linux">
			<arg value="--user=${sql.user}" />
			<arg value="--password=${sql.password}" />
			<arg value="-e drop user 'competencymatrix'@'localhost';" />
		</exec>
		<echo>Create user with proper rights</echo>
		<exec executable="mysql" os="Linux">
			<arg value="--user=${sql.user}" />
			<arg value="--password=${sql.password}" />
			<arg value="-e ${sql_user_create}" />
		</exec>
    </target>
	
	<target name="db_args" unless="sql.user, sql.password" description="prompts for command line arguments if necessary">
		<input addProperty="sql.user" message="Please enter database user:">
			<handler classname="org.apache.tools.ant.input.DefaultInputHandler" />
		</input>
		<input addProperty="sql.password" message="Please enter database password:">
 			<handler classname="org.apache.tools.ant.input.SecureInputHandler" />
		</input>
	</target>
	
	<target name="info">
		<echo>Provides various scripts to build and run application. Most stuff should run on Linux + Windows</echo>
		<echo>Targets available:</echo>
		<echo>setup_project: 		uses database, download tomee, build app, start tomee</echo>
		<echo>create_mysql_database: 	creates mysql database, user and password for the project</echo>
		<echo>rebuild_application: 	stop tomee, build app, start tomee</echo>
		<echo>clean_all: 			stop tomee, clean app, clean tomee</echo>
		<echo>copy_frontend_local: 	copies web frontend into local deployment folder (designer shortcut ;))</echo>
		<echo>build_copy: 		build app, copy to a given tomee folder </echo>
		<echo>build_application: 		clean + build application</echo>
		<echo>clean_application: 		clean application</echo>
		
		<echo>stop_tomee: 		stop tomee</echo>
		<echo>run_tomee: 			start tomee</echo>
		<echo>clean_tomee: 		start tomee</echo>
		<echo></echo>
		<echo>Set database type via -Ddb=mysql. If no param h2 will be used. </echo>
	</target>
</project>
